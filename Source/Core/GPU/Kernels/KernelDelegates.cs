global using AppendKernel = System.Action<ILGPU.Runtime.AcceleratorStream, ILGPU.Index1D, ILGPU.ArrayView<float>, ILGPU.ArrayView<float>, ILGPU.ArrayView<float>, int, int>;
global using AccessSliceKernel = System.Action<ILGPU.Runtime.AcceleratorStream, ILGPU.Index1D, ILGPU.ArrayView<float>, ILGPU.ArrayView<float>, ILGPU.ArrayView<int>>;
global using A_FloatOPKernel = System.Action<ILGPU.Runtime.AcceleratorStream, ILGPU.Index1D, ILGPU.ArrayView<float>, ILGPU.ArrayView<float>, ILGPU.ArrayView<float>, ILGPU.Runtime.SpecializedValue<int>>;
global using A_FloatOPKernelIP = System.Action<ILGPU.Runtime.AcceleratorStream, ILGPU.Index1D, ILGPU.ArrayView<float>, ILGPU.ArrayView<float>, ILGPU.Runtime.SpecializedValue<int>>;
global using S_FloatOPKernel = System.Action<ILGPU.Runtime.AcceleratorStream, ILGPU.Index1D, ILGPU.ArrayView<float>, ILGPU.ArrayView<float>, float, ILGPU.Runtime.SpecializedValue<int>>;
global using S_FloatOPKernelIP = System.Action<ILGPU.Runtime.AcceleratorStream, ILGPU.Index1D, ILGPU.ArrayView<float>, float, ILGPU.Runtime.SpecializedValue<int>>;
global using DiffKernel = System.Action<ILGPU.Runtime.AcceleratorStream, ILGPU.Index1D, ILGPU.ArrayView<float>, ILGPU.ArrayView<float>>;
global using CrossKernel = System.Action<ILGPU.Runtime.AcceleratorStream, ILGPU.Index1D, ILGPU.ArrayView<float>, ILGPU.ArrayView<float>, ILGPU.ArrayView<float>>;
global using TransposeKernel = System.Action<ILGPU.Runtime.AcceleratorStream, ILGPU.Index1D, ILGPU.ArrayView<float>, ILGPU.ArrayView<float>, int>;
global using SIOKernel = System.Action<ILGPU.Runtime.AcceleratorStream, ILGPU.Index1D, ILGPU.ArrayView<float>, float>;
global using DualVectorOPKernel = System.Action<ILGPU.Runtime.AcceleratorStream, ILGPU.Index1D, ILGPU.ArrayView<float>, ILGPU.ArrayView<float>, ILGPU.ArrayView<float>, int, ILGPU.Runtime.SpecializedValue<int>>;
global using IOKernel = System.Action<ILGPU.Runtime.AcceleratorStream, ILGPU.Index1D, ILGPU.ArrayView<float>>;